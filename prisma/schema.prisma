// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider      = "prisma-client-js"
  binaryTargets = ["native", "debian-openssl-3.0.x"]
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model User {
  id        Int      @id @default(autoincrement())
  email     String   @unique
  name      String
  phone     String
  password  String
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  company Company?
  bills   Bill[]
}

model Company {
  id        Int      @id @default(autoincrement())
  name      String
  address   String?  @db.Text
  phone     String?
  email     String?
  panNumber String?
  vatNumber String?
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  user   User @relation(fields: [userId], references: [id])
  userId Int  @unique
}

model Bill {
  id              Int        @id @default(autoincrement())
  invoiceNumber   String     @unique
  clientName      String
  clientAddress   String     @db.Text
  clientPhone     String
  clientPanNumber String?
  billDate        DateTime   @db.Date
  dueDate         DateTime   @db.Date
  discount        Decimal    @default(0.00) @db.Decimal(10, 2)
  status          BillStatus @default(Pending)
  createdAt       DateTime   @default(now())
  updatedAt       DateTime   @updatedAt

  user   User   @relation(fields: [userId], references: [id])
  userId Int
  items  BillItem[]
}

model BillItem {
  id          Int      @id @default(autoincrement())
  description String   @db.Text
  quantity    Decimal  @db.Decimal(10, 2)
  unit        String
  rate        Decimal  @db.Decimal(10, 2)
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  bill   Bill @relation(fields: [billId], references: [id], onDelete: Cascade)
  billId Int
}

enum BillStatus {
  Pending
  Paid
  Overdue
}
